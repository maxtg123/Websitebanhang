@model IEnumerable<Shop.Models.Invoice>

@{
    ViewData["Title"] = "Thống kê";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-12">
        <!-- /.card -->
        <form asp-action="Statictical" method="get">
            <div class="form-row">
                <div class="form-group col-md-4">
                    <label>Thống kê doanh thu bán được:</label>

                    <select name="type" class="form-control">
                        <option value="1">
                            Thống kê doanh thu từ ngày - ngày
                        </option>
                        @*<option value="2">
                            Thống kê doanh thu theo tháng
                        </option>
                        <option value="3">
                            Thống kê doanh thu theo năm
                        </option>*@
                    </select>
                </div>

                <div class="form-group">
                    <label>Từ ngày:</label>
                    <div class="input-group date" id="reservationdate" data-target-input="nearest">
                        <input type="text" name="startD" class="form-control datetimepicker-input" data-target="#reservationdate" />
                        <div class="input-group-append" data-target="#reservationdate" data-toggle="datetimepicker">
                            <div class="input-group-text"><i class="fa fa-calendar"></i></div>
                        </div>
                    </div>
                </div>

                <div class="form-group ml-2">
                    <label>Đến ngày:</label>
                    <div class="input-group date" id="reservationdate1" data-target-input="nearest">
                        <input type="text" name="endD" class="form-control datetimepicker-input" data-target="#reservationdate1" />
                        <div class="input-group-append" data-target="#reservationdate1" data-toggle="datetimepicker">
                            <div class="input-group-text"><i class="fa fa-calendar"></i></div>
                        </div>
                    </div>
                </div>
                <button type="submit" style="height: 37px; margin-top: 33px; margin-left: 1%;" class="btn btn-success btn-rounded waves-effect waves-light"><i class="fas fa-eye pr-2"></i>Xem</button>

                <div class="form-group col-md-4">

                </div>
                <div class="form-group col-md-2">
                </div>

            </div>

        </form>

        @if(ViewBag.TotalFromDocToDoc != null) {
            <div class="card">
                <div class="card-header">
                    <div class="row">
                        <h2 class="card-title"><b>Danh sách đơn hàng @ViewBag.TitleStatictical</b></h2>
                    </div>
                </div>
                <!-- /.card-header -->
                <div class="card-body">
                    <table id="example1" class="table table-bordered table-striped">
                        <thead>
                            <tr>
                                <th>
                                    @Html.DisplayNameFor(model => model.Code)
                                </th>
                                <th>
                                    Tên khách hàng
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.IssuedDate)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.OrderStatusId)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.TotalDisplay)
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                            <tr>
                                <td>
                                    <a asp-action="InvoiceDetail" asp-route-id="@item.Id">@Html.DisplayFor(modelItem => item.Code)</a>
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Account.FullName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.IssuedDate)
                                </td>
                                <td>
                                    <b class="btn btn-outline-success btn-fw" style="width: 120;">@item.OrderStatus.StatusName</b>
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.TotalDisplay)
                                </td>
                            </tr>
                            }
                            <tr style="font-size: 150%; color: red;">
                                <td colspan="4" style=" text-align: right;">Tổng cộng:</td>
                                <td>@ViewBag.TotalFromDocToDoc</td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <!-- /.card-body -->
            </div>

        }
    </div>
    <!-- /.col -->
</div>

@section Script {
    <script>
        $(function () {
            $("#example1").DataTable({
                "responsive": true, "lengthChange": true, "autoWidth": false//,
                //"buttons": ["copy", "csv", "excel", "pdf", "print", "colvis"]
            }).buttons().container().appendTo('#example1_wrapper .col-md-6:eq(0)');
            $('#example2').DataTable({
                "paging": true,
                "lengthChange": true,
                "searching": false,
                "ordering": true,
                "info": true,
                "autoWidth": false,
                "responsive": true,
            });
        });
    </script>
    <script>
        $(function () {
            //Initialize Select2 Elements
            $('.select2').select2()

            //Initialize Select2 Elements
            $('.select2bs4').select2({
                theme: 'bootstrap4'
            })

            //Datemask dd/mm/yyyy
            $('#datemask').inputmask('dd/mm/yyyy', { 'placeholder': 'dd/mm/yyyy' })
            //Datemask2 mm/dd/yyyy
            $('#datemask2').inputmask('dd/mm/yyyy', { 'placeholder': 'dd/mm/yyyy' })
            //Money Euro
            $('[data-mask]').inputmask()

            //Date picker
            $('#reservationdate').datetimepicker({
                format: 'DD/MM/YYYY'
            });

            //Date picker
            $('#reservationdate1').datetimepicker({
                format: 'DD/MM/YYYY'
            });

            //Date and time picker
            $('#reservationdatetime').datetimepicker({ icons: { time: 'far fa-clock' } });

            //Date range picker
            $('#reservation').daterangepicker()
            //Date range picker with time picker
            $('#reservationtime').daterangepicker({
                timePicker: true,
                timePickerIncrement: 30,
                locale: {
                    format: 'DD/MM/YYYY hh:mm A'
                }
            })
            //Date range as a button
            $('#daterange-btn').daterangepicker(
                {
                    ranges: {
                        'Today': [moment(), moment()],
                        'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],
                        'Last 7 Days': [moment().subtract(6, 'days'), moment()],
                        'Last 30 Days': [moment().subtract(29, 'days'), moment()],
                        'This Month': [moment().startOf('month'), moment().endOf('month')],
                        'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]
                    },
                    startDate: moment().subtract(29, 'days'),
                    endDate: moment()
                },
                function (start, end) {
                    $('#reportrange span').html(start.format('MMMM D, YYYY') + ' - ' + end.format('MMMM D, YYYY'))
                }
            )

            //Timepicker
            $('#timepicker').datetimepicker({
                format: 'DD/MM/YYYY'
            })

            //Bootstrap Duallistbox
            $('.duallistbox').bootstrapDualListbox()

            //Colorpicker
            $('.my-colorpicker1').colorpicker()
            //color picker with addon
            $('.my-colorpicker2').colorpicker()

            $('.my-colorpicker2').on('colorpickerChange', function (event) {
                $('.my-colorpicker2 .fa-square').css('color', event.color.toString());
            })

            $("input[data-bootstrap-switch]").each(function () {
                $(this).bootstrapSwitch('state', $(this).prop('checked'));
            })

        })
        // BS-Stepper Init
        document.addEventListener('DOMContentLoaded', function () {
            window.stepper = new Stepper(document.querySelector('.bs-stepper'))
        })

        // DropzoneJS Demo Code Start
        Dropzone.autoDiscover = false

        // Get the template HTML and remove it from the doumenthe template HTML and remove it from the doument
        var previewNode = document.querySelector("#template")
        previewNode.id = ""
        var previewTemplate = previewNode.parentNode.innerHTML
        previewNode.parentNode.removeChild(previewNode)

        var myDropzone = new Dropzone(document.body, { // Make the whole body a dropzone
            url: "/target-url", // Set the url
            thumbnailWidth: 80,
            thumbnailHeight: 80,
            parallelUploads: 20,
            previewTemplate: previewTemplate,
            autoQueue: false, // Make sure the files aren't queued until manually added
            previewsContainer: "#previews", // Define the container to display the previews
            clickable: ".fileinput-button" // Define the element that should be used as click trigger to select files.
        })

        myDropzone.on("addedfile", function (file) {
            // Hookup the start button
            file.previewElement.querySelector(".start").onclick = function () { myDropzone.enqueueFile(file) }
        })

        // Update the total progress bar
        myDropzone.on("totaluploadprogress", function (progress) {
            document.querySelector("#total-progress .progress-bar").style.width = progress + "%"
        })

        myDropzone.on("sending", function (file) {
            // Show the total progress bar when upload starts
            document.querySelector("#total-progress").style.opacity = "1"
            // And disable the start button
            file.previewElement.querySelector(".start").setAttribute("disabled", "disabled")
        })

        // Hide the total progress bar when nothing's uploading anymore
        myDropzone.on("queuecomplete", function (progress) {
            document.querySelector("#total-progress").style.opacity = "0"
        })

        // Setup the buttons for all transfers
        // The "add files" button doesn't need to be setup because the config
        // `clickable` has already been specified.
        document.querySelector("#actions .start").onclick = function () {
            myDropzone.enqueueFiles(myDropzone.getFilesWithStatus(Dropzone.ADDED))
        }
        document.querySelector("#actions .cancel").onclick = function () {
            myDropzone.removeAllFiles(true)
        }
          // DropzoneJS Demo Code End
    </script>


}